model {

  customer = actor 'Issuer or Verifier' {
    -> credebl.studio 'Issues & Verifies credentials' {
      description 'Uses the web app to issue and verify credentials.'
    }

    -> credebl.studio 'Uses Studio to manage credentials'
    -> credebl.studio.wallet-ui 'Views a wallet'
  }

  customer -> credebl 'uses'
  customer -> studio 'opens in browser'
  studio -> gateway

  credebl = system 'CREDEBL System' {

    description 'Decentralized Identity Platform'

    studio = webapp 'CREDEBL Studio' {
      icon tech:nextjs
      technology 'Next.js SPA'
      description 'Provides access to SSI services'
      link https://studio.sovio.id

      wallet-ui = component 'Wallet UI' {
        icon tech:nextjs
        technology 'Next.js single-page application'
        description 'Displays organization wallet & DIDs'
      }

      // wallet-ui -> platform 'calls wallet API' {
      //   description 'Provides access to wallet data'
      // }
      wallet-ui -> platform.gateway 'sends & receives client requests/responses' {
        description 'Provides access to micro-services'
      }
    }

    platform = service 'CREDEBL Platform' {
      icon tech:nestjs
      technology 'API Gateway'
      description 'Provides access to micro-services'
      link https://github.com/credebl/platform

      gateway = system 'API Gateway' {
        icon tech:nginx
        technology 'NGINX'
        description 'Provides access to micro-services'

        -> nats 'routes requests to micro-services' {
          description 'Provides access to micro-services'
        }
        -> studio 'Returns response to web app' {
          description 'Returns response to web app'
        }
      }

      nats = messaging 'NATS Messaging' {
        icon https://nats.io/img/logos/nats-horizontal-color.png
        technology 'NATS'
        description 'Provides access to micro-services'
        link https://nats.io

        -> services.agent-service 'Sends & receives messages' {
          description 'Provides access to micro-services'
        }

        -> services.controller 'Sends & receives messages' {
          description 'Provides access to micro-services'
        }
        
        -> gateway 'Returns response back to clients' {
          description 'Returns response back to clients'
        }
      }

      services = microservices 'Microservices' {
        icon tech:nestjs
        description 'Pool of micro-services'

        agent-service = service 'Agent Service' {
          icon tech:nestjs
          description "Manages all the interactions with the Credo Agent"

          -> controller 'Stores & Gets wallet data'
          -> credebl-db 'Stores user & org data'
        }

        controller = service 'Controller Service' {
          icon tech:nestjs
          technology 'express.js'
          description 'Provides REST API endpoints to the Credo Agent'
          link https://github.com/credebl/credo-controller

          agent = component 'Credo Agent' {
            icon tech:typescript
            technology 'node.js'
            description 'Manages all the decentralized Id & Verifiable Credential operations'

            -> agent-db 'Stores wallet data'

            hiero-module = component 'Hiero Module' {
              icon tech:typescript
              technology 'TypeScript SDK'
              description 'Credo Module for Hiero ledger'
              link https://github.com/ayanworks/credo-hedera-module

              hiero-did-sdk = component 'Hiero DID SDK' {
                icon tech:npm
                technology 'TypeScript SDK'
                description 'Manages all DID related operations with the Hiero ledger'

                -> hiero-ledger 'Writes & resolves DIDs' {
                  description 'Manages all DID operations with Hiero ledger'
                }
              }

              hiero-schema-sdk = component 'Hiero Schema SDK' {
                icon tech:npm
                technology 'TypeScript SDK'
                description 'Manages all Schema operations with the Hiero ledger'

                -> ipfs 'Writes & Resolves a Schema' {
                  description 'Writes schemas on to the IPFS'
                }

                -> file-server 'Writes & Resolves Schemas' {
                  description 'Writes a new DID to the Hiero ledger.'
                }
              }
            }
          }
        }
      }

      storage = storage 'Data Storage' {
        description 'Provides access to data'

        credebl-db = database 'CREDEBL Database' {
          icon tech:postgresql
          technology 'PostgreSQL'
          description 'Stores all Org wallets, and user data.'

          users = db_table 'Users' {
            description 'Stores all user data.'
          }

          orgs = db_table 'Organizations' {
            description 'Stores all Organization data.'
          }

          users -> orgs
        }

        agent-db = database 'Agent Database' {
          icon tech:postgresql
          technology 'PostgreSQL'
          description 'Stores all wallets, DIDs'

          wallets = db_table 'Wallets' {
            description 'Stores all wallet data.'
          }

          dids = db_table 'DIDs' {
            description 'Stores all user DIDs.'
          }

          wallets -> dids
        }

        file-server = file-system 'File System' {
          icon https://cdn-icons-png.flaticon.com/128/5490/5490308.png
          technology 'Deno'
          description 'Stores all schema files uploaded by the user.'
        }
      }
    }
  }

  hiero-ledger = external-system 'Hiero Ledger' {
    icon https://avatars.githubusercontent.com/u/179146999?s=200&v=4
    description '
      Hiero-based distributed ledger to anchor DIDs & Schemas
    '
    style {
      color red
    }
  }

  ipfs = external-system 'IPFS File System' {
    icon https://upload.wikimedia.org/wikipedia/commons/1/18/Ipfs-logo-1024-ice-text.png
    description 'IPFS-based distributed file system to store schemas.'

    style {
      color sky
    }

  }

}
